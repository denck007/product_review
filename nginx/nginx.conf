
# The tutuoral most of this is based on
#   https://testdriven.io/blog/dockerizing-flask-with-postgres-gunicorn-and-nginx/
# Detail description of how to setup and configure nginx. This is not really followed here
#   https://www.patricksoftwareblog.com/how-to-configure-nginx-for-a-flask-web-application/
# Rewriting the url:
#   https://www.domysee.com/blogposts/reverse-proxy-nginx-docker-compose

upstream api_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    #server unix:/tmp/gunicorn.sock fail_timeout=0;

    # for a TCP configuration
    server api:8080 fail_timeout=0;
  }

server {
    listen 80;
    server_name  _;

    location = /favicon.ico { access_log off; log_not_found off;}
    
    root /static;
    location / {
        try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
        proxy_pass http://api_server;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_redirect off;
        #rewrite ^/api/(.*)$ $1 break;
    }

}
